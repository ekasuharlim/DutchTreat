
Startup class is called in main entry point program.cs
Startup.Configure is HttpRequest pipeline

Setup static files :
app.UseStaticFiles()
Static files must be inside wwwroot

Default static files :
app.UseDefaultFiles()
	Search the file inside wwwroot
	Change the internal path to point to the file
	return the changed internal path

Enable MVC :
	Services.AddControllersWithViews()
	app.UseRouting();
	app.UseEndpoints(Action<IEndPpointBuilder>);

How UseEndPoints works :
	Understanding ASP.NET Core Endpoint Routing : https://aregcode.com/blog/2019/dotnetcore-understanding-aspnet-endpoint-routing/
	How ASP. Net core endpoint routing works : https://developpaper.com/how-asp-net-core-endpoint-routing-works/
	EndpointRoutingApplicationBuilderExtensions -> extension class that has UseRouting and UseEndpoints method
	ControllerEndpointRouteBuilderExtensions -> extension class contains MapControllerRoute  and  other methods for using Controllers 
	UseRouting : to match pattern with url
		UseRouting will call EndpointRoutingMiddleware -> responsible for matching url with pattern specified in UseEndPoints
			EndpointRoutingMiddleware will call Matcher (eg: BareboneMatcher) to set matched EndPoint to HttpContext in method MatchAsync

	UseEndPoints : endpoint mapping and dispatch endpoint
				   mapping defined here also can be accessed in UseRouting when request comes (MapControllerRoute)	
						MapControllerRoute will add ConventionalRouteEntry to the route datasource
										   will add ControllerActionEndpointDataSource to datasource, has method CreateEndpoints, 
										   CreateEndpoints in the end it will create Endpoint.RequestDelegate
				   will call EndpointMiddleware for dispatching (await endpoint.RequestDelegate)
					
More views:
	Special file :
		Shared/_Layout.cshtml  -> master page contains header and footer
		_ViewStart.cshtml -> put reference to Lasyout file, will  be applied to all views
		_ViewImport.cshtml -> put included binaries in all cshtml file, can be use to include taghelper

ModelViewBinding:
	Create the model
	Add reference to  the model on the view html

Validation
	To add validation : add reference to System.ComponentModel.DataAnnotations
	ClientSide validation will need Jquery.Validate and Jquery.Validate.Unobtrusive
	Jquery.Validate.Unobtrusive -> is a microsoft Jquery Validate extension